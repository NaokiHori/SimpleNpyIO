name: CI

on:
  push:
    branches:
      - main
    paths:
      - include/**
      - src/**
      - test/**
      - .github/workflows/ci.yml
  workflow_dispatch:

jobs:

  test:
    name: Create NPY files in C and load from Python, vice versa
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
      - name: Install Libraries
        run: |
          python -m pip install --upgrade pip
          pip install numpy
      - name: Build and Run Tests
        run: |
          set -x
          cd test
          mkdir artifacts
          make clean
          make all
          test_exit_code=$(python3 runner.py > test.log; echo $?)
          echo $test_exit_code > artifacts/test_exit_code.txt
          mv *.log artifacts/
      - name: Upload artifacts
        uses: actions/upload-artifact@main
        with:
          name: test
          path: test/artifacts
      - name: Return error code
        run: |
          set -x
          test_exit_code=$(cat test/artifacts/test_exit_code.txt)
          if [ "$test_exit_code" -ne 0 ]; then
            echo "some of the test cases fail"
            exit 1
          else
            echo "all test cases success"
          fi

  memory-leak-check:
    name: Check memory leak
    runs-on: ubuntu-latest
    container:
      image: naokihori/alpine-valgrind:1.0
      volumes:
        - :/home
      options: --rm
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
      - name: Run tests
        run: |
          set -x
          mkdir -p artifacts
          make clean
          make all
          valgrind_exit_code=$(valgrind \
            --leak-check=full \
            --error-exitcode=1 \
            --xml=yes \
            --xml-file=artifacts/valgrind.xml \
            ./a.out > artifacts/log.out; echo $?)
          echo $valgrind_exit_code > artifacts/valgrind_exit_code.txt
      - name: Upload artifacts
        uses: actions/upload-artifact@main
        with:
          name: memory-leak-check
          path: artifacts
      - name: Evaluate Valgrind Exit Code
        run: |
          set -x
          valgrind_exit_code=$(cat artifacts/valgrind_exit_code.txt)
          if [ "$valgrind_exit_code" -ne 0 ]; then
            echo "Valgrind detected errors"
            exit 1
          else
            echo "Valgrind did not detect any memory leaks"
          fi

  check-install:
    name: Check install script works
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
      - name: Install
        run: |
          bash install.sh install
      - name: Uninstall
        run: |
          bash install.sh uninstall

